# vim: ft=gitconfig: sw=4: expandtab:
#

[alias]
    ca = commit -a
    co = checkout

    ss = status -s
    sb = ss --branch
    su = ss --untracked-files=all
    si = ss --ignored

    ll = log --pretty=line
    ls = log --pretty=some
    lv = log --pretty=more --name-status
    ln = ls --name-status
    lr = ln --relative

    lp  = ls -p
    lpw = lp --color-words

    llf = ll --first-parent
    lsf = ls --first-parent
    lvf = lv --first-parent
    lnf = ln --first-parent
    lrf = lr --first-parent

    lpf  = lp --first-parent
    lpwf = lpw --first-parent

    llg = ll --graph

    dd = diff
    ds = dd --staged
    dn = dd --name-status
    dr = dn --relative

    ddw = dd --color-words
    dsw = ds --color-words

    bb  = branch

    branch-list-remote = bb -r --column=auto
    branch-local-verbose = "! git branch -vv --color \"${@}\" | sed 's/([^)]*) *//g' #"
    branch-need-sync = "! git bbv \"${@}\" | sed -n 's/^\\(.*\\) \\[\\([^]]*\\):  *\\(.*\\)\\].*$/\\1 [\\3] \\2/p' #"
    branch-show-current = "! git branch -vv --color \"${@}\" | grep '^[*] ' #"

    bbr = branch-list-remote
    bbv = branch-local-verbose
    bbs = branch-need-sync
    bbc = branch-show-current

    who = blame

    top      = rev-parse --show-toplevel
    top-from = rev-parse --show-prefix
    top-to   = rev-parse --show-cdup

    ww  = worktree
    wwl = ww list
    wwa = ww add
    wwp = ww prune

    worktree-branches      = "! git worktree prune && git branch | awk '$1 ~ /^[^@[:alnum:]]/ {print $NF}' #"
    worktree-less-branches = "! git worktree prune && git branch | awk '$1 ~ /^[[:alnum:]]/ {print $NF}' #"

    worktree-restore  = "! git worktree-less-branches | xargs -t -n1 -I{} git worktree add ../{} {} #"
    worktree-traverse = "! git worktree-branches | sed 's/^=*//' | env -u GIT_DIR xargs -t -n1 -I{} git -C ../{} \"${@:-ss}\" #"
    worktree-update   = "! git remote update --prune && git worktree-traverse merge --ff-only #"

    wrr = worktree-restore
    wtt = worktree-traverse
    wuu = worktree-update

    svn-pull  = svn rebase
    svn-push  = svn dcommit
    svn-clone = svn clone

    branch-remote-owner = "! git branch -r --list \"*${1}*/*\" | while read line; do set -- ${line}; echo \"`git log -1 --color --pretty=meta ${1}`\" ${1}; done #"
    bro = branch-remote-owner
