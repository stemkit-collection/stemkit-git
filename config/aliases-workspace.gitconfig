# vim: ft=gitconfig: sw=4:
#

[include]
    path = aliases-light.gitconfig

[alias]
    stm-aliases-available = "! true"
    stm-check-master = "! ${git:-git} master-workspace | xargs -I{} ${git:-git} -C {} workspace | xargs echo 'Master workspace:'"
    stm-env = "! env"

    aa = "! ${git:-git} config --list | ruby -ne '$_.scan(%r{^alias[.](.*?)\\s*=\\s*(.*)$}){|a,c|puts %q{%-4s -> %s}%[a,c]}' | \"${PAGER:-cat}\""
    print-aliases = aa

    bn = "! bn=`${git:-git} rev-parse --abbrev-ref --revs-only \"${1:-HEAD}\" --` && echo ${bn:-${1}} #"
    branch-name = bn

    bsl = "! echo branch:start: #"
    branch-start-label = bsl

    bsm = "! bn=\"${1:-`${git:-git} bn`}\" && echo \"`${git:-git} bsl`${bn}\" #"
    branch-start-message = bsm

    ensure-not-staged = "! ${git:-git} diff --staged --exit-code --name-status || (echo ERROR: Content found staged for commit, please reset. 1>&2 && false) #"
    mark-branch-start = "! ${git:-git} ensure-not-staged && bsm=`${git:-git} bsm \"${@}\"` && ${git:-git} commit --allow-empty -m \"${bsm}\" #"

    make-branch = "! ${git:-git} checkout -b \"${1}\" \"${2:-HEAD}\" && bsm=`${git:-git} bsm \"${1}\"` && ${git:-git} commit --allow-empty -m \"${bsm}\" #"

    brs = "! bn=\"${1:-`${git:-git} bn`}\" && bsl=`${git:-git} bsl` && ${git:-git} rev-list -1 --first-parent --grep \"^${bsl}\" \"${bn}\" -- #"
    branch-rev-start = brs

    brr = "! bn=`${git:-git} bn ${1}` && brs=`${git:-git} brs \"${bn}\"` && (([ -z \"${brs}\" ] && echo ${bn}) || echo ${brs}~1..${bn}) #"
    branch-rev-range = brr

    launch-in = "! e=`${git:-git} -C \"${1}\" rev-parse --local-env-vars` && unset ${e} && ${git:-git} -C"
    labeled-rev-parse-show = "! s=`${git:-git} launch-in \"${1}\" rev-parse --show-${2}` c=${?} sh -c 'echo ${3} ${s:-./}; exit ${c}' --"

    from-top = "! ${git:-git} labeled-rev-parse-show \"${GIT_PREFIX}\" prefix"
    to-top = "! ${git:-git} labeled-rev-parse-show \"${GIT_PREFIX}\" cdup"
    top = "! ${git:-git} labeled-rev-parse-show \"${GIT_PREFIX}\" toplevel"

    workspace = "! t=`${git:-git} top` c=${?} sh -c '[ ${c} = 0 -a -f \"${t}\"/.git ] || { echo ${t:-./}; exit ${c}; } && sed \"s%^[^/]*\\(/.*\\)/.git/.*%\\1%\" \"${t}\"/.git'"
    ws = "! ${git:-git} workspace"

    master-workspace = "! ${git:-git} config --show-origin --get-all include.path | sed -n 's/^file:\\(.*\\)\\/config\\/dot-gitloader[[:space:]].*$/\\1/p' | tail -1"
    mws = "! ${git:-git} master-workspace"

    replace-prefixes = "! p=`${git:-git} -C \"${GIT_PREFIX}\" to-top` sh -c '${git:-git} launch-in \"${GIT_PREFIX}\" \"${0}\" --src-prefix=${p} --dst-prefix=${p} \"${@}\"'"
    lp = "! ${git:-git} launch-in \"${GIT_PREFIX}\" replace-prefixes ls -m -p"
    dd = "! sh -c '${git:-git} launch-in \"${GIT_PREFIX}\" replace-prefixes diff \"${@}\" --' --"

    with-first = "! c=${1}; shift; f=; [ -${1} != --- ] && f=${1} && shift; echo `${git:-git} ${c} ${f}` \"${@}\" #"

    lsb  = "! ${git:-git} launch-in \"${GIT_PREFIX}\" lsf  `${git:-git} with-first brr \"${@}\"` #"
    lnb  = "! ${git:-git} launch-in \"${GIT_PREFIX}\" lnf  `${git:-git} with-first brr \"${@}\"` #"
    lrb  = "! ${git:-git} launch-in \"${GIT_PREFIX}\" lrf  `${git:-git} with-first brr \"${@}\"` #"
    lvb  = "! ${git:-git} launch-in \"${GIT_PREFIX}\" lvf  `${git:-git} with-first brr \"${@}\"` #"
    llb  = "! ${git:-git} launch-in \"${GIT_PREFIX}\" llf  `${git:-git} with-first brr \"${@}\"` #"
    lpb  = "! ${git:-git} launch-in \"${GIT_PREFIX}\" lpf  `${git:-git} with-first brr \"${@}\"` #"
    lpwb = "! ${git:-git} launch-in \"${GIT_PREFIX}\" lpwf `${git:-git} with-first brr \"${@}\"` #"

    dnb  = "! ${git:-git} launch-in \"${GIT_PREFIX}\" dn  `${git:-git} with-first brr \"${@}\"` #"
    drb  = "! ${git:-git} launch-in \"${GIT_PREFIX}\" dr  `${git:-git} with-first brr \"${@}\"` #"
    ddb  = "! ${git:-git} launch-in \"${GIT_PREFIX}\" dd  `${git:-git} with-first brr \"${@}\"` #"
    ddwb = "! ${git:-git} launch-in \"${GIT_PREFIX}\" ddw `${git:-git} with-first brr \"${@}\"` #"

    foreach-stdin-line = "! env -u GIT_DIR xargs -I{} sh -c 'd=\"{}\" && echo \"## ${d}\" 1>&2 && [ ${#} = 0 ] || ${git:-git} -C `echo ${d} | sed \"s/^.* //\"` \"${@}\"' --"
    tt  = "! find -L `pwd` -maxdepth 6 -name .git -exec dirname {} ';' | ${git:-git} foreach-stdin-line"
    wtt = "! ${git:-git} run-script guess-worktree -lw | ${git:-git} foreach-stdin-line"

    run-script = "! mws=`${git:-git} mws` && ws=`${git:-git} ws` && cd \"${GIT_PREFIX:-.}\" >/dev/null && sh -c 'PATH='\"""${ws}/scripts:${mws:+${mws}/scripts:}""\"'${PATH} \"${@}\"' --"

    update-worktrees = "! ${git:-git} launch-in \"${GIT_PREFIX}\" run-script update-worktrees"
    uu = "! ${git:-git} launch-in \"${GIT_PREFIX}\" update-worktrees"

    restore-worktrees = "! ${git:-git} launch-in \"${GIT_PREFIX}\" run-script restore-worktrees"
    rr = "! ${git:-git} launch-in \"${GIT_PREFIX}\" restore-worktrees"

    guess-worktree = "! ${git:-git} launch-in \"${GIT_PREFIX}\" run-script guess-worktree"
    gg = "! ${git:-git} launch-in \"${GIT_PREFIX}\" guess-worktree"
