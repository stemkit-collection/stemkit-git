# vim: ft=gitconfig: sw=4:
#
[alias]
    gfb-aliases-available = ! true
    aa = ! ${git:-git} config --list | ruby -ne 'scan(%r{^alias[.](.*?)\\s*=\\s*(.*)$}){|a,c|puts %q{%-4s -> %s}%[a,c]}'

    bn = ! bn=`${git:-git} rev-parse --abbrev-ref --revs-only \"${1:-HEAD}\" --` && echo ${bn:-${1}} "#"
    branch-name = ! ${git:-git} bn

    bsl = ! echo branch:start: "#"
    branch-start-label = ! ${git:-git} bsl

    bsm = ! bn=\"${1:-`${git:-git} bn`}\" && echo \"`${git:-git} bsl`${bn}\" "#"
    branch-start-message = ! ${git:-git} bsm

    ensure-not-staged = ! ${git:-git} diff --staged --exit-code --name-status || (echo ERROR: Content found staged for commit, please reset. 1>&2 && false) "#"
    mark-branch-start = ! ${git:-git} ensure-not-staged && bsm=`${git:-git} bsm \"${@}\"` && ${git:-git} commit --allow-empty -m \"${bsm}\" "#"

    make-branch = ! ${git:-git} checkout -b \"${1}\" \"${2:-HEAD}\" && bsm=`${git:-git} bsm \"${1}\"` && ${git:-git} commit --allow-empty -m \"${bsm}\" "#"

    brs = ! bn=\"${1:-`${git:-git} bn`}\" && bsl=`${git:-git} bsl` && ${git:-git} rev-list -1 --first-parent --grep \"^${bsl}\" \"${bn}\" -- "#"
    branch-rev-start = ! ${git:-git} brs

    brr = ! bn=`${git:-git} bn ${1}` && brs=`${git:-git} brs \"${bn}\"` && (([ -z \"${brs}\" ] && echo ${bn}) || echo ${brs}~1..${bn}) "#"
    branch-rev-range = ! ${git:-git} brr

    launch-in = ! e=`${git:-git} -C \"${1}\" rev-parse --local-env-vars` && unset ${e} && ${git:-git} -C

    ca = ! ${git:-git} launch-in \"${GIT_PREFIX}\" ${__sk_visualize_sk__} commit -a
    co = ! ${git:-git} launch-in \"${GIT_PREFIX}\" ${__sk_visualize_sk__} checkout

    ss = ! ${git:-git} launch-in \"${GIT_PREFIX}\" ${__sk_visualize_sk__} status -s
    sb = ! ${git:-git} launch-in \"${GIT_PREFIX}\" ss --branch
    su = ! ${git:-git} launch-in \"${GIT_PREFIX}\" ss --untracked-files=all
    si = ! ${git:-git} launch-in \"${GIT_PREFIX}\" ss --ignored

    visualize = ! 1>&2 ruby -e \"puts ARGV.map{|s|s.gsub(%r{.*\\s.*},&:inspect)}.join(' ')\" -- git
    visualize-no-color = ! git visualize \"${@}\" 2>&1 | 1>&2 ruby -pe \"gsub(%r{%C[(].+?[)]},'')\" "#"
    what  = ! __sk_visualize_sk__=visualize-no-color ${git:-git} launch-in \"${GIT_PREFIX}\"
    whatc = ! __sk_visualize_sk__=visualize ${git:-git} launch-in \"${GIT_PREFIX}\"

    log-name = ! echo \"%C(cyan dim bold)${1}%C(reset)%C(auto)\" "#"
    log-name-trunc = ! ${git:-git} log-name \"%<(19,trunc)${1}\" "#"
    date-param = ! echo --date=\"format-local:%F %T\"

    log-date-as = ! sh -c '${git:-git} launch-in \"${GIT_PREFIX}\" ${__sk_visualize_sk__} log \"`${git:-git} date-param`\" --pretty=tformat:\"%C(auto)${0}\" \"${@}\" --'
    log-with-header = ! sh -c '${git:-git} launch-in \"${GIT_PREFIX}\" log-date-as \"`printf %78s|sed s/./-/g`%+D%+h (%p) | `${git:-git} log-name %cN` | %cd (%cr) ${0}\" \"${@}\"'

    labeled-rev-parse-show = ! s=`${git:-git} launch-in \"${1}\" rev-parse --show-${2}` c=${?} sh -c "'echo ${3} ${s:-./}; exit ${c}'" --

    from-top = ! ${git:-git} labeled-rev-parse-show \"${GIT_PREFIX}\" prefix
    to-top = ! ${git:-git} labeled-rev-parse-show \"${GIT_PREFIX}\" cdup
    top = ! ${git:-git} labeled-rev-parse-show \"${GIT_PREFIX}\" toplevel

    workspace = ! t=`${git:-git} top` c=${?} sh -c "'[ \"${c}\" = 0 -a -f \"${t}\"/.git ] || { echo ${t:-./}; exit ${c}; } && ${git:-git} -C .. top'"
    ws = ! git workspace

    master-workspace = ! ${git:-git} config --show-origin --get-all include.path | sed -n 's/^file:\\(.*\\)\\/config\\/dot-gitloader[[:space:]].*$/\\1/p' | tail -1
    mws = ! ${git:-git} master-workspace

    replace-prefixes = ! p=`${git:-git} -C \"${GIT_PREFIX}\" to-top` sh -c '${git:-git} launch-in \"${GIT_PREFIX}\" \"${0}\" --src-prefix=${p} --dst-prefix=${p} \"${@}\"'

    lh   = ! ${git:-git} launch-in \"${GIT_PREFIX}\" log-with-header \"\"
    ls   = ! ${git:-git} launch-in \"${GIT_PREFIX}\" log-with-header \"%+s\"
    ln   = ! ${git:-git} launch-in \"${GIT_PREFIX}\" log-with-header \"%+s\" --name-status
    lr   = ! ${git:-git} launch-in \"${GIT_PREFIX}\" ln --relative
    lv   = ! ${git:-git} launch-in \"${GIT_PREFIX}\" log-with-header \"%+s%+b\" --name-status
    ll   = ! ${git:-git} launch-in \"${GIT_PREFIX}\" log-date-as \"%C(yellow dim bold)%>(8)%h%C(reset)%C(auto) %cd `${git:-git} log-name-trunc %cN`%d %s\"

    lp   = ! ${git:-git} launch-in \"${GIT_PREFIX}\" replace-prefixes ls -p
    lpw  = ! ${git:-git} launch-in \"${GIT_PREFIX}\" lp --color-words

    lhf  = ! ${git:-git} launch-in \"${GIT_PREFIX}\" lh  --first-parent
    lsf  = ! ${git:-git} launch-in \"${GIT_PREFIX}\" ls  --first-parent
    lnf  = ! ${git:-git} launch-in \"${GIT_PREFIX}\" ln  --first-parent
    lrf  = ! ${git:-git} launch-in \"${GIT_PREFIX}\" lr  --first-parent
    lvf  = ! ${git:-git} launch-in \"${GIT_PREFIX}\" lv  --first-parent
    llf  = ! ${git:-git} launch-in \"${GIT_PREFIX}\" ll  --first-parent

    lpf  = ! ${git:-git} launch-in \"${GIT_PREFIX}\" lp  --first-parent
    lpwf = ! ${git:-git} launch-in \"${GIT_PREFIX}\" lpw --first-parent

    lhb  = ! ${git:-git} launch-in \"${GIT_PREFIX}\" lhf  `${git:-git} branch-rev-range \"${@}\"` "#"
    lsb  = ! ${git:-git} launch-in \"${GIT_PREFIX}\" lsf  `${git:-git} branch-rev-range \"${@}\"` "#"
    lnb  = ! ${git:-git} launch-in \"${GIT_PREFIX}\" lnf  `${git:-git} branch-rev-range \"${@}\"` "#"
    lrb  = ! ${git:-git} launch-in \"${GIT_PREFIX}\" lrf  `${git:-git} branch-rev-range \"${@}\"` "#"
    lvb  = ! ${git:-git} launch-in \"${GIT_PREFIX}\" lvf  `${git:-git} branch-rev-range \"${@}\"` "#"
    llb  = ! ${git:-git} launch-in \"${GIT_PREFIX}\" llf  `${git:-git} branch-rev-range \"${@}\"` "#"

    lpb  = ! ${git:-git} launch-in \"${GIT_PREFIX}\" lpf  `${git:-git} branch-rev-range \"${@}\"` "#"
    lpwb = ! ${git:-git} launch-in \"${GIT_PREFIX}\" lpwf `${git:-git} branch-rev-range \"${@}\"` "#"

    lg   = ! ${git:-git} launch-in \"${GIT_PREFIX}\" ${__sk_visualize_sk__} log --graph --oneline --decorate --all
    llg  = ! ${git:-git} launch-in \"${GIT_PREFIX}\" ll --graph

    dd   = ! sh -c '${git:-git} launch-in \"${GIT_PREFIX}\" replace-prefixes ${__sk_visualize_sk__} diff \"${@}\" --' --
    ds   = ! ${git:-git} launch-in \"${GIT_PREFIX}\" dd --staged
    dn   = ! ${git:-git} launch-in \"${GIT_PREFIX}\" ${__sk_visualize_sk__} diff --name-status
    dr   = ! ${git:-git} launch-in \"${GIT_PREFIX}\" dn --relative

    ddw  = ! ${git:-git} launch-in \"${GIT_PREFIX}\" dd --color-words
    dsw  = ! ${git:-git} launch-in \"${GIT_PREFIX}\" ds --color-words

    dnb  = ! ${git:-git} launch-in \"${GIT_PREFIX}\" dn  `${git:-git} branch-rev-range \"${@}\"` "#"
    drb  = ! ${git:-git} launch-in \"${GIT_PREFIX}\" dr  `${git:-git} branch-rev-range \"${@}\"` "#"
    ddb  = ! ${git:-git} launch-in \"${GIT_PREFIX}\" dd  `${git:-git} branch-rev-range \"${@}\"` "#"
    ddwb = ! ${git:-git} launch-in \"${GIT_PREFIX}\" ddw `${git:-git} branch-rev-range \"${@}\"` "#"

    tt   = ! find -L `pwd` -maxdepth 6 -name .git -exec dirname {} "';'" | xargs -I{} sh -c "'echo \"## {}\" 1>&2 && [ ${#} = 0 ] || ${git:-git} -C \"{}\" \"${@}\"'" --
    wtt  = ! ws=`${git:-git} workspace` && ${__sk_visualize_sk__:+echo} ${git:-git} -C \"${ws}\" tt

    run-script = ! mws=`${git:-git} mws` && ws=`${git:-git} ws` && cd \"${GIT_PREFIX:-.}\" >/dev/null && ${__sk_visualize_sk__:+echo} sh -c 'PATH='\""${ws}/scripts:${mws:+${mws}/scripts:}"\"'${PATH} \"${@}\"' --

    update-worktrees = ! ${git:-git} launch-in \"${GIT_PREFIX}\" run-script update-worktrees
    uu = ! ${git:-git} launch-in \"${GIT_PREFIX}\" update-worktrees

    restore-worktrees = ! ${git:-git} launch-in \"${GIT_PREFIX}\" run-script restore-worktrees
    rr = ! ${git:-git} launch-in \"${GIT_PREFIX}\" restore-worktrees

    guess-workspace = ! ${git:-git} launch-in \"${GIT_PREFIX}\" run-script guess-workspace
    gg = ! ${git:-git} launch-in \"${GIT_PREFIX}\" guess-workspace

    ww   = ! ${git:-git} ${__sk_visualize_sk__} worktree
    wwl  = ! ${git:-git} ww list
    wwa  = ! ${git:-git} ww add
    wwp  = ! ${git:-git} ww prune

    bb   = ! ${git:-git} ${__sk_visualize_sk__} branch
    bbr  = ! ${git:-git} bb -r --column=auto
    bbv  = ! ${git:-git} bb -vv

    who = ! ${git:-git} launch-in \"${GIT_PREFIX}\" ${__sk_visualize_sk__} blame \"`${git:-git} date-param`\" \"${@}\" | ruby -pe 'gsub(%r{^(\\S+) .*?\\((.*)$}, %q{\\1 \\2})' | \"${PAGER:-cat}\" "#"

    bbs  = ! ${git:-git} bb -vv --color \"${@}\" | ruby -ne 'scan(%r{^([*]?\\s*\\S+.*?)\\S+\\s+\\[([^\\]:]*?) *: *([^\\]:]*?)\\]}){|b,r,s|puts %q{%s %-12s %s}%[b,s,r]}' "#"
    bbb = ! ${git:-git} bbs --no-color | ruby -ne "'puts scan(%r{^[*\\s]*(\\S+)})'" "#"
    bbc  = ! ${git:-git} branch -vv --color | grep '^[*] '

    branch-remote-owner = ! git branch -r --list ${1:+${1}/*} | xargs -I\"{}\" git log-date-as \"%h %cd `git log-name-trunc %cN` {}\" \"{}\" --color -1 "#"
    bro = ! ${git:-git} branch-remote-owner

    svn-pull  = ! ${git:-git} svn rebase
    svn-push  = ! ${git:-git} svn dcommit
    svn-clone = ! ${git:-git} svn clone
