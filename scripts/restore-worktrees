#!/bin/sh
# vim: ft=sh: sw=2:
# Author: Gennady Bystritsky (bystr@mac.com)

unset DIRECTORY OFFSET

GIT_CONFIG_P_SECTION=stm.workspace
GIT_CONFIG_P_DIRECTORY="${GIT_CONFIG_P_SECTION}".directory
GIT_CONFIG_P_OFFSET="${GIT_CONFIG_P_SECTION}".offset

DEFAULT_DIRECTORY=work-trees
DEFAULT_OFFSET=src

main () {
  parse_command_line "${@}"
  setup_git_environment

  ensure_git_workspace
  report_dry_run

  run git worktree prune

  process_branches `git branch --no-color | grep -v '^[*]'`
}

process_branches () {
  for branch in "${@}"; do
    (echo "${branch}" | egrep -q '^([0-9]+[.])|[#@=+%]') && {
      info "Ignored for prefix" "${branch}"
      continue
    }

    make_worktree ${branch} || {
      warning 'Problems detected, check prior messages.'
    }
  done
}

make_worktree () {
  top=`figure_directory`/`branch_as_path "${1}"`/`figure_offset`

  [ -e "${top}" ] && {
    info "Already exists" "${top} -> ${1}"
    return 0
  }

  run git worktree add "${top}" "${1}"
}

figure_directory () {
  value_config_or_default "${DIRECTORY}" "${GIT_CONFIG_P_DIRECTORY}" "${DEFAULT_DIRECTORY}"
}

figure_offset () {
  value_config_or_default "${OFFSET}" "${GIT_CONFIG_P_OFFSET}" "${DEFAULT_OFFSET}"
}

value_config_or_default () {
  value="${1:-${2:+`git config ${2}`}}"
  echo "${value:-${3}}"
}

process_option () {
  option=${1}
  argument=${2}

  case "${option}" in
    --directory | -d )
      DIRECTORY="${argument}"
      return 4
    ;;

    --offset | -o )
      OFFSET="${argument}"
      return 4
    ;;

    *)
      process_standard_option "${@}"
    ;;
  esac
}

process_parameters () {
  return ${#}
}

options_usage () {
  echo "`standard_options_usage`[--directory|-d <folder>][--offset|-o <folder>]"
}

extra_usage_info () {
  output 2
  output 2 "Current settings:"

  git config --list | fgrep -e "${GIT_CONFIG_P_DIRECTORY}" -e "${GIT_CONFIG_P_OFFSET}" | {
    sed 's/^\([^=]*\)=\(.*\)$/  "\1" => "\2"/g'
  }

  output 2
  output 2 "Assumed unless listed above:"
  output 2 "  git config --local --replace-all \"${GIT_CONFIG_P_DIRECTORY}\" \"${DEFAULT_DIRECTORY}\""
  output 2 "  git config --local --replace-all \"${GIT_CONFIG_P_OFFSET}\" \"${DEFAULT_OFFSET}\""
}

. `type "${0}" | sed 's/^.* //' | xargs dirname`/core.sh.lib
start import=git,ws "${@}"
