#!/bin/sh
# vim: ft=sh: sw=2:
# Author: Gennady Bystritsky (bystr@mac.com)

REMOTE=no
MERGE=yes
PUSH=no

main () {
  parse_command_line "${@}"

  root=`git ws 2>&5` || {
    error "Not a git workspace: `pwd`"
    exit 2
  }

  report_simulation_mode

  [ "${REMOTE}" = yes ] && {
    run git remote update --prune
    ensure_simulation_mode
  }

  is_simulation_mode && {
    MERGE=yes
    PUSH=yes
  }

  git -C "${root}" tt top 2>&5 | while read top; do
    cd "${top}" && {
      set -- `git bbs | awk '$1 == "*" {print $(2), $(NF)}'`

      [ ${#} -eq 2 ] || continue

      pwd="pwd"
      [ "${PUSH}" = yes ] && {
        ensure_no_local_changes || {
          number=${?}
          "${pwd}"

          indent_output_from push "${number}" "${@}"
          pwd="true"
        }
      }

      [ "${MERGE}" = yes ] && {
        ensure_no_remote_changes || {
          number=${?}
          "${pwd}"

          indent_output_from merge_if_clean "${number}" "${@}"
          pwd="true"
        }
      }
    }
  done
}

ensure_no_remote_changes () {
  return `git log --oneline ..@{u} | head -100 | wc -l`
}

ensure_no_local_changes () {
  return `git log --oneline @{u}.. | head -100 | wc -l`
}

ensure_clean_workspace () {
  return `git -c color.status=always status -s 2>&1 | tee /dev/stderr | head -100 | wc -l`
}

merge_if_clean () {
  info "${2} <=[${1}] ${3}"

  ensure_clean_workspace || {
    warning "Detected ${?} changed or untracked, not merging."
    return 2
  }

  run git merge --ff-only
}

push () {
  info "${2} [${1}]=> ${3}"
  run git push
}

process_option () {
  debug "O: ${1} (${2})"

  option=${1}
  argument=${2}

  case "${option}" in
    --remote | -r )
      REMOTE=yes
      disable_simulation_mode
    ;;

    --push | -p )
      PUSH=yes
      MERGE=no
    ;;

    --merge | -m )
      MERGE=yes
    ;;

    *)
      process_standard_option "${@}"
    ;;
  esac
}

process_parameters () {
  return ${#}
}

options_usage () {
  echo "`standard_options_usage`[--remote|-r][--push|-p][--merge|-m]"
}

. `type "${0}" | awk '{print $(NF)}' | xargs dirname`/core.sh.lib
start import=ws "${@}"
