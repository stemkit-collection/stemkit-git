#!/bin/sh
# vim: ft=sh: sw=2:
# Author: Gennady Bystritsky (bystr@mac.com)

main () {
  disable_simulation_mode
  setup_git_environment

  git "${@}"
}

git () {
  run "${SK_ORIGINAL_GIT:?}" -c include.path="${SK_GIT_ALIASES:?}" "${@}"
}

setup_git_environment () {
  unset top

  ensure_original_git
  ensure_git_aliases
}

figure_top_folder () {
  [ "${top:+set}" = set ] && return

  for marker in ${script_folder}/{.,..,../..,../../..}/.git; do
    [ -d "${marker}" ] && {
      top=`echo "${marker}" | convert_input_to_full_path | xargs dirname`
      return
    }
  done

  error 'No top'
  exit 2
}

ensure_original_git () {
  [ "${SK_ORIGINAL_GIT:+set}" = set ] && return

  figure_top_folder
  set -- `find_in_path git`

  argc=${#}
  path_ready=no
  hook=${top}/scripts/hooks/git

  while [ ${#} -ne 0 ]; do
    [ "${1}" != "${hook}" ] && {
      [ "${path_ready}" = no ] && {
        PATH=`dirname "${hook}"`:${PATH}
        export PATH
      }

      SK_ORIGINAL_GIT=${1} export SK_ORIGINAL_GIT
      return
    }

    [ ${#} = "${argc}" ] && path_ready=yes
    shift
  done

  error 'No real git in PATH'
  exit 2
}

find_in_path () {
  for folder in `echo "${PATH}" | sed 's/:/ /g'`; do
    path=${folder}/${1}

    [ "${path:+set}" = set -a -x "${path}" ] && {
      echo "${path}" | convert_input_to_full_path
    }
  done
}

ensure_git_aliases () {
  [ "${SK_GIT_ALIASES:+set}" = set ] && return

  figure_top_folder
  SK_GIT_ALIASES=${top}/config/dot-gitaliases

  [ -f "${SK_GIT_ALIASES}" ] && {
    export SK_GIT_ALIASES
    return
  }

  error "git aliases missing: ${SK_GIT_ALIASES:-'???'}"
  exit 3
}

. `type "${0}" | awk '{print $(NF)}' | xargs dirname`/../core.sh.lib
start import=../git "${@}"
