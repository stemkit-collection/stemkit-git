#!/bin/sh
# vim: ft=sh: sw=2:
# Author: Gennady Bystritsky (bystr@mac.com)

REPO_STM_GIT="https://github.com/stemkit-collection/stemkit-git.git"
REPO_STM_GIT_PUSH="git@github.com:stemkit-collection/stemkit-git.git"

REPO_TSC_TPM="https://github.com/tsc-collection/tsc-tpm.git"
REPO_STM_UTIL="https://github.com/stemkit-collection/stemkit-util.git"

REMOTE_STM_GIT="remote-gh-stm-git"
REMOTE_TSC_TPM="remote-gh-tsc-tpm"
REMOTE_STM_UTIL="remote-gh-stm-util"

BRANCH_STM_GIT="workspace"
BRANCH_TSC_TPM="tsc-tpm"
BRANCH_STM_UTIL="stm-util"

RUNTIME_OFFSET="default"

unset O_FORCE O_RUNTIME
unset CLEANUP_LIST

main () {
  while [ "${#}" -ne 0 ]; do
    case "${1}" in
      -h | --help)
        usage_and_exit
      ;;

      -f | --force)
        O_FORCE=yes
      ;;

      -r | --runtime)
        O_RUNTIME=yes
      ;;

      -- )
        break
      ;;

      -*)
        echo "ERROR: Unknown option: ${1}" 1>&6
        usage_and_exit 2
      ;;

      *)
        break
      ;;
    esac

    shift
  done

  [ "${#}" -ne 1 ] && {
    echo "ERROR: Folder for local repository not specified" 1>&6
    usage_and_exit 3
  }

  MARKER='=='

  [ "${O_FORCE}" = yes ] || {
    banner "
      |
      | FYI: Simulation mode (dry-run), use opton --force for normal run
      |"

    MARKER='##'
  }

  run mkdir "${1}"
  run cd "${1}" 1>&5

  [ "${O_FORCE}" = yes ] && {
    FOLDER_TOP=`pwd`
    FOLDER_ROOT=`dirname "${FOLDER_TOP}"`

    CLEANUP_LIST="${FOLDER_TOP}"
    trap cleanup 0 2 15
  }

  [ "${O_RUNTIME}" = yes ] && {
    run mkdir "${RUNTIME_OFFSET}"
    run cd "${RUNTIME_OFFSET}" 1>&5
  }

  run git init .

  run git remote add "${REMOTE_STM_GIT}" "${REPO_STM_GIT}"
  run git remote set-url --push "${REMOTE_STM_GIT}" "${REPO_STM_GIT_PUSH}"

  run git config --local --replace-all core.symlinks true

  [ "${O_RUNTIME}" = yes ] && {
    run git remote add "${REMOTE_STM_UTIL}" "${REPO_STM_UTIL}"
    run git remote add "${REMOTE_TSC_TPM}" "${REPO_TSC_TPM}"

    run git config --local --replace-all "stm.workspace.directory" "../.."
    run git config --local --replace-all "stm.workspace.offset" "${RUNTIME_OFFSET}"
  }

  run git remote update

  run git checkout -b "${BRANCH_STM_GIT}" "${REMOTE_STM_GIT}/master"
  unset CLEANUP_LIST

  [ "${O_FORCE}" = yes ] && {
    banner "
      |
      | SUCCESS: Created stm-git workpace at \"`pwd`\"
      |
      | Please add the following entry to your \$HOME/.gitconfig file
      | unless already present pointing to another similarly created
      | workspace:
      |
      | [include]
      |     path = `pwd`/config/dot-gitconfig
      |
      | Alternatively, you may run the following command to add such
      | an entry unconditionally:
      |
      | $ git config --global --add include.path `pwd`/config/dot-gitconfig
      |"

      [ "${O_RUNTIME}" = yes ] && {
        FOLDER_TSC_TPM="${FOLDER_ROOT}/${BRANCH_TSC_TPM}"
        FOLDER_STM_UTIL="${FOLDER_ROOT}/${BRANCH_STM_UTIL}"

        banner "
          | To create branches for tsc-tpm and stemkit-util, please run the
          | following commans which will create folders ${BRANCH_TSC_TPM}
          | and "${BRANCH_STM_UTIL}" on specified folder's level:
          |
          | $ cd `pwd`
          |
          | $ git branch \"${BRANCH_TSC_TPM}\" \"${REMOTE_TSC_TPM}/master\"
          | $ git branch \"${BRANCH_STM_UTIL}\" \"${REMOTE_STM_UTIL}/master\"
          |
          | $ ./scripts/restore-worktrees --force
          |"

        for folder in "${FOLDER_TSC_TPM}" "${FOLDER_STM_UTIL}"; do
          [ -e "${folder}" ] && {
            echo "WARNING: Path \"${folder}\" exists!" 1>&6
          }
        done
      }
  }
}

banner () {
  echo "${@}" | sed -n 's/^ *|/|/p' 1>&6
}

cleanup () {
  for entry in ${CLEANUP_LIST}; do
    run rm -rf "${entry}"
  done
}

run () {
  echo "${MARKER} ${@}" 1>&6
  [ "${O_FORCE}" = yes ] || return 0

  "${@}" || exit "${?}"
}

usage_and_exit () {
  banner "
    |
    | USAGE: ${script_name} [-h | --help][-f | --force][-r | --runtime] [--] <folder-to-create>
    |
    | Option --runtime will cause creation of so called \"runtime\" layout
    | for referencing from a user's shell startup (e.g., ~/.profile):
    |   o Additional folder level \"${RUNTIME_OFFSET}\"
    |   o Remotes for tsc-tpm and stemkit-util
    |   o Work trees for branches on the spedified folder's level
    |"

  exit "${1:-0}"
}

script_name=`basename "${0}"`
exec 5>/dev/null 6>&2

main "${@}"
